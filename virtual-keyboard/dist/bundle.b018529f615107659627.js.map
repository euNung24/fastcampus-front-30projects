{"version":3,"file":"bundle.b018529f615107659627.js","mappings":"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","sources":["webpack://virtual-keyboard/./src/js/index.ts","webpack://virtual-keyboard/./src/js/Keyboard.ts"],"sourcesContent":["import \"../css/style.css\";\nimport Keyboard from \"./Keyboard\";\nvar keyboard = new Keyboard();\n","var Keyboard = /** @class */ (function () {\n    function Keyboard() {\n        this.koreanRegExp = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n        this.language = \"english\";\n        this.isShiftPress = false;\n        this.keyDown = false;\n        this.mouseDown = false;\n        this.setElements();\n        this.setEvents();\n    }\n    Keyboard.prototype.setElements = function () {\n        this.$container = document.querySelector(\".container\");\n        this.$switchThemeEl = this.$container.querySelector(\"[name='theme']\");\n        this.$fontSelectEl = this.$container.querySelector(\"[name='font']\");\n        this.$keyboardEl = this.$container.querySelector(\".keyboardBox\");\n        this.$inputEl = this.$container.querySelector(\"[name=value]\");\n        this.$errorEl = this.$container.querySelector(\".message\");\n    };\n    Keyboard.prototype.setEvents = function () {\n        this.$switchThemeEl.addEventListener(\"change\", this.onChangeTheme);\n        this.$fontSelectEl.addEventListener(\"change\", this.onChangeFont);\n        document.addEventListener(\"keydown\", this.onKeyDown.bind(this));\n        document.addEventListener(\"keyup\", this.onKeyUp.bind(this));\n        this.$keyboardEl.addEventListener(\"mousedown\", this.onMouseDown.bind(this));\n        document.addEventListener(\"mouseup\", this.onMouseUp.bind(this));\n    };\n    Keyboard.prototype.onChangeTheme = function (e) {\n        document.documentElement.setAttribute(\"theme\", e.target.checked ? \"dark-mode\" : \"\");\n    };\n    Keyboard.prototype.onChangeFont = function (e) {\n        document.body.style.fontFamily = e.target.value;\n    };\n    Keyboard.prototype.changeLanguage = function () {\n        this.language = this.language === \"english\" ? \"korean\" : \"english\";\n        this.$keyboardEl.setAttribute(\"data-type\", this.language);\n    };\n    Keyboard.prototype.changeType = function () {\n        this.isShiftPress = !this.isShiftPress;\n        this.$keyboardEl.setAttribute(\"data-type\", \"\".concat(this.language).concat(this.isShiftPress ? \"-shift\" : \"\"));\n    };\n    Keyboard.prototype.onKeyDown = function (e) {\n        if (this.mouseDown)\n            return;\n        this.keyDown = true;\n        var keyEl;\n        if (e.key === '\"') {\n            keyEl = this.$keyboardEl.querySelector(\"[data-key='\\\"']\");\n        }\n        else if (e.key === \"\\\\\") {\n            keyEl = this.$keyboardEl.querySelector(\"[data-key=\\\"\\\"]\");\n        }\n        else {\n            keyEl =\n                this.$keyboardEl.querySelector(\"[data-key=\\\"\".concat(e.key, \"\\\"]\")) ||\n                    this.$keyboardEl.querySelector(\"[data-key=\\\"\".concat(e.code, \"\\\"]\"));\n        }\n        keyEl === null || keyEl === void 0 ? void 0 : keyEl.closest(\".keyBox\").classList.add(\"active\");\n        if (e.key.includes(\"Shift\")) {\n            this.changeType();\n        }\n        else if (e.key === \"CapsLock\") {\n            this.changeLanguage();\n        }\n        else if (e.key.includes(\"Backspace\")) {\n            this.$inputEl.value = this.$inputEl.value.slice(0, -1);\n        }\n        else if (e.key.includes(\"Space\")) {\n            this.$inputEl.value += \" \";\n        }\n        else {\n            keyEl &&\n                (this.$inputEl.value += keyEl.dataset.key.replace(this.koreanRegExp, \"\"));\n        }\n        this.$errorEl.classList.toggle(\"error\", this.koreanRegExp.test(e.key) || Boolean(!keyEl));\n    };\n    Keyboard.prototype.onKeyUp = function (e) {\n        if (this.mouseDown)\n            return;\n        this.keyDown = false;\n        var keyEl = this.$keyboardEl.querySelector(\"[data-key=\\\"\".concat(e.key, \"\\\"]\")) ||\n            this.$keyboardEl.querySelector(\"[data-key=\\\"\".concat(e.code, \"\\\"]\"));\n        keyEl === null || keyEl === void 0 ? void 0 : keyEl.closest(\".keyBox\").classList.remove(\"active\");\n    };\n    Keyboard.prototype.onMouseDown = function (e) {\n        var _a, _b;\n        if (this.keyDown)\n            return;\n        this.mouseDown = true;\n        var target = e.target;\n        if (target.dataset.key === \"CapsLock\") {\n            this.changeLanguage();\n            return;\n        }\n        if ((_a = target.dataset.key) === null || _a === void 0 ? void 0 : _a.includes(\"Shift\")) {\n            this.changeType();\n            return;\n        }\n        if ((_b = target.dataset.key) === null || _b === void 0 ? void 0 : _b.includes(\"Back\")) {\n            this.$inputEl.value = this.$inputEl.value.slice(0, -1);\n            return;\n        }\n        var keyBoxEl = target.closest(\".keyBox\");\n        keyBoxEl === null || keyBoxEl === void 0 ? void 0 : keyBoxEl.classList.add(\"active\");\n        var type = this.$keyboardEl.dataset.type;\n        var keyEl = keyBoxEl === null || keyBoxEl === void 0 ? void 0 : keyBoxEl.querySelector(\"[data-type=\".concat(type, \"]\"));\n        if (keyEl) {\n            this.$inputEl.value += keyEl.dataset.key.replace(this.koreanRegExp, \"\");\n        }\n        else if (keyBoxEl) {\n            this.$inputEl.value += target.dataset.key;\n        }\n        this.$errorEl.classList.toggle(\"error\", this.koreanRegExp.test(target.dataset.key) || Boolean(!keyEl));\n    };\n    Keyboard.prototype.onMouseUp = function (e) {\n        if (this.keyDown)\n            return;\n        this.mouseDown = false;\n        this.$keyboardEl.querySelector(\".active\").classList.remove(\"active\");\n    };\n    return Keyboard;\n}());\nexport default Keyboard;\n"],"names":["Keyboard","this","koreanRegExp","language","isShiftPress","keyDown","mouseDown","setElements","setEvents","prototype","$container","document","querySelector","$switchThemeEl","$fontSelectEl","$keyboardEl","$inputEl","$errorEl","addEventListener","onChangeTheme","onChangeFont","onKeyDown","bind","onKeyUp","onMouseDown","onMouseUp","e","documentElement","setAttribute","target","checked","body","style","fontFamily","value","changeLanguage","changeType","concat","keyEl","key","code","closest","classList","add","includes","slice","dataset","replace","toggle","test","Boolean","remove","_a","_b","keyBoxEl","type"],"sourceRoot":""}